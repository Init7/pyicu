name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYICU_VERSION: "2.14"
  ICU_MAX_MAJOR_VERSION: 76
  LIBICU_VERSION: "76"
  _ICU_URL: https://github.com/unicode-org/icu/releases/download/release-76-1/icu4c-76_1-src.tgz

jobs:
  linux:
    name: Linux wheels (${{ matrix.cpy }}-${{ matrix.platform }}_${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - "x86_64"
          - "aarch64"
          - "i686"
          - "ppc64le"
        cpy:
          # - "cp38"
          # - "cp39"
          # - "cp310"
          # - "cp311"
          # - "cp312"
          - "cp313"
        platform:
          - "manylinux"
          - "musllinux"

    env:
      _LIBICU_DIR: "/host/tmp/.build"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Cache pyicu
        id: cache-pyicu
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/pyicu
          key: ${{ runner.os }}-pyicu-${{ env.PYICU_VERSION }}

      - name: Fetch pyicu source
        if: steps.cache-pyicu.outputs.cache-hit != 'true'
        run: hatch run pyicu:clone

      - name: Copy src and tests
        run: |
          hatch run pyicu:src
          hatch run pyicu:tests

      - name: Cache libicu
        id: cache-libicu
        uses: actions/cache@v4
        with:
          path: "/tmp/.build"
          key: libicu-${{ matrix.platform }}-${{ matrix.arch }}-${{ env.LIBICU_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
          # Note: 6.2.0 is buggy: make sure to avoid it.
          # See https://github.com/pypa/cibuildwheel/issues/1250
          image: tonistiigi/binfmt:qemu-v7.0.0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: ${{ matrix.cpy }}-${{ matrix.platform }}_${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.cpy }}-${{ matrix.platform }}_${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  macos:
    if: true
    name: Build wheels on macOS (${{ matrix.arch }})
    runs-on: macos-${{ matrix.macos }}
    strategy:
      matrix:
        arch:
          - "x86_64"
          - "arm64"
        cpy:
          - "cp310"
        include:
          - arch: "x86_64"
            macos: 13
            brew: "/usr/local/opt"
          - arch: "arm64"
            macos: 14
            brew: "/opt/homebrew/opt"

    steps:
      - uses: actions/checkout@v4

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Cache pyicu
        id: cache-pyicu
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/pyicu
          key: ${{ runner.os }}-pyicu-${{ env.PYICU_VERSION }}

      - name: Fetch pyicu source
        if: steps.cache-pyicu.outputs.cache-hit != 'true'
        run: hatch run pyicu:clone

      - name: Copy src and tests
        run: |
          hatch run pyicu:src
          hatch run pyicu:tests

      - name: Install build dependencies
        run: |
          brew update
          brew install icu4c@${{ env.LIBICU_VERSION }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: ${{ matrix.cpy }}-macosx_${{ matrix.arch }}
          CIBW_ARCHS_MACOS: ${{matrix.arch}}
          CIBW_ENVIRONMENT: >-
            MACOSX_DEPLOYMENT_TARGET="${{ matrix.macos }}.0"
            _LIBICU_DIR="${{ matrix.brew }}/icu4c@${{ env.LIBICU_VERSION }}"

      - uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.macos }}-${{ matrix.cpy }}-macosx_${{ matrix.arch }}
          path: ./wheelhouse/*.whl
